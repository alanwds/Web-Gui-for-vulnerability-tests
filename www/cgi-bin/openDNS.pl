#!/usr/bin/perl
#Script para testar a recursividade de um servidor DNS
#O script recebe como parametro um IP de um servidor DNS a ser testado e retorna 0 para servidor OK, 1 para servidor vulneravel ou 2 para algum erro + mensagem de erro
#ATENCAO, o retorno da flag deve ser procedido de uma outra flag para separar o resultado da mensagem que o script retorna. Exemplo: 0&message, 1&anotherMessage etc..

#Autor: alanwds@gmail.com

use warnings;
use strict;
use Net::DNS;

#Declaracao de variavels
my $dnsServerToCheck = 0;
my $dest = 'www.rnp.br';
my $debug = 0;
my $timeout = 2;

#Chega o envio do parametro
#Se tiver sem parametro, exibe help
#Se tiver com parametro, ele atrbiui o parametro a variavel dnsServerToCheck
#Nao existe naitizacao dos dados aqui, pois presume-se que os dados ja foram sanitizados no script "MASTER"

if (!$ARGV[0]){

print "ERRO: Modo de usar:
	\n ./openDNS [IP]
\n[IP] - Endereco do servidor DNS a ser testado\n";
exit 0;
}else{

	$dnsServerToCheck = $ARGV[0];

}

#############  RECURSION CHECK #######################

print "Checando recursividade (open dns)...\n" if $debug;
my @nservers = $dnsServerToCheck;

  my $rres = Net::DNS::Resolver->new(
        nameservers => [@nservers],
        recurse     => 1, 
        debug       => 0,
	tcp_timeout => $timeout,
	udp_timeout => $timeout,
  );


my $r_query = $rres->query($dest,"A");
my @dest_ips=();

  if ($r_query) {
      foreach my $rrr ($r_query->answer) {
          next unless $rrr->type eq "A";
          print "Consultas recursivas estao habilitados no servidor ",$rres->nameserver(),": ",$rrr->address, "\n" if $debug;
	  print "1&";

      }
  } else {
      	 print "OK. Queryes recursivas nao estao sendo permitidas. ", $rres->errorstring, "\n" if $debug;
	
	#Testa o resultado, para saber se houve erro ou se o servidor realmente nao esta respondendo a consultas recursivas
	if ($rres->errorstring eq 'REFUSED'){

		print "0&";

	}else{
		print "2&";
		print $rres->errorstring;
	}	

	
  }
